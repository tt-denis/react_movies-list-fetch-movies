{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","endpoint","a","fetch","response","json","data","Response","getMovie","title","FindMovie","setMovies","useState","setTitle","setMovie","invalid","setInvalid","getMoviesFromServer","moviesFromServer","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","classNames","onChange","target","onClick","find","m","App","ReactDOM","render","document","getElementById"],"mappings":"uTAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC3BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uDCVRC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACEC,MAAM,GAAD,OAJb,2BAIa,OAAeF,IADtB,cACfG,EADe,gBAEFA,EAASC,OAFP,UAIC,WAFhBC,EAFe,QAIZC,SAJY,yCAKZ,MALY,gCAQdD,GARc,2CAAH,sDAWPE,EAAQ,uCAAG,WAAOC,GAAP,SAAAP,EAAA,+EACfF,EAAQ,YAAD,OAdA,WAcA,cAA0BS,KADlB,2CAAH,sDCHRC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,EAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOvB,EAAP,KAAcyB,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAmB,uCAAG,4BAAAf,EAAA,sEACKM,EAASC,GADd,cACpBS,EADoB,UAIxBF,GAAW,GACXF,EAAS,OALe,kBAQnBA,EAASI,IARU,2CAAH,qDAWzB,OACE,qCACE,uBACE5B,UAAU,aACV6B,SAAU,SAACC,GACTA,EAAMC,iBACNJ,KAJJ,UAOE,sBAAK3B,UAAU,QAAf,UACE,wBACEA,UAAU,QACVgC,QAAQ,cAFV,wBAKE,qBAAKhC,UAAU,UAAf,SACE,uBACEiC,KAAK,OACLC,GAAG,cACHC,MAAOhB,EACPiB,YAAY,0BACZpC,UAAWqC,IAAW,QAAS,CAAE,YAAaZ,IAC9Ca,SAAU,SAACR,GAAD,OAAYL,EAAUC,GAAW,GAASH,EAASO,EAAMS,OAAOJ,eAK/EV,GACC,mBAAGzB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,kBAFZ,4BAQF,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,oBACVwC,QAAS,SAACV,GACRA,EAAMC,iBACFhC,IACFsB,GAAU,SAACd,GACT,OAAIA,EAAOkC,MAAK,SAACC,GAAD,OAAOA,EAAEjC,SAAWV,EAAMU,UACjCF,EAGH,GAAN,mBAAWA,GAAX,CAAmBR,OAErBwB,EAAS,IACTC,EAAS,QAdf,qCAwBN,qBAAKxB,UAAU,YAAf,SACGD,GACC,qCACE,oBAAIC,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aC/FjB4C,EAAgB,WAC3B,MAA4BrB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAec,EAAf,KAEA,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEqB,UAAWA,UCXrBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ab9a7760.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/';\nconst API_KEY = '2642b950';\n\nexport const request = async (endpoint: string) => {\n  const response = await fetch(`${BASE_URL}${endpoint}`);\n  const data = await response.json();\n\n  if (data.Response === 'False') {\n    return null;\n  }\n\n  return data;\n};\n\nexport const getMovie = async (title: string) => {\n  return request(`/?apikey=${API_KEY}&t=${title}`);\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  setMovies: (callback: (movies: Movie[]) => Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [invalid, setInvalid] = useState(false);\n\n  const getMoviesFromServer = async () => {\n    const moviesFromServer = await getMovie(title);\n\n    if (!moviesFromServer) {\n      setInvalid(true);\n      setMovie(null);\n    }\n\n    return setMovie(moviesFromServer);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          getMoviesFromServer();\n        }}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={title}\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': invalid })}\n                onChange={(event) => (invalid ? setInvalid(false) : setTitle(event.target.value))}\n              />\n            </div>\n          </label>\n\n          {invalid && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={(event) => {\n                event.preventDefault();\n                if (movie) {\n                  setMovies((movies) => {\n                    if (movies.find((m) => m.imdbID === movie.imdbID)) {\n                      return movies;\n                    }\n\n                    return [...movies, movie];\n                  });\n                  setTitle('');\n                  setMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}